<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-19T20:36:10 IST" name="Default suite" finished-at="2024-05-19T20:37:23 IST" duration-ms="72813">
    <groups>
      <group name="Register">
        <method signature="RegisterAccountSuite.TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields()[pri:1, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails()[pri:2, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields()[pri:3, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield()[pri:4, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield()[pri:5, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage()[pri:6, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_007()[pri:7, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_007" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield()[pri:8, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys()[pri:9, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_010_ValidateRegisterAccountFieldsPlacehoders()[pri:10, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_010_ValidateRegisterAccountFieldsPlacehoders" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly()[pri:11, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly" class="qa.com.testSuites.RegisterAccountSuite"/>
      </group> <!-- Register -->
      <group name="Regression">
        <method signature="RegisterAccountSuite.TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields()[pri:1, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails()[pri:2, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields()[pri:3, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield()[pri:4, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield()[pri:5, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage()[pri:6, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_007()[pri:7, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_007" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield()[pri:8, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys()[pri:9, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_010_ValidateRegisterAccountFieldsPlacehoders()[pri:10, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_010_ValidateRegisterAccountFieldsPlacehoders" class="qa.com.testSuites.RegisterAccountSuite"/>
        <method signature="RegisterAccountSuite.TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly()[pri:11, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" name="TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly" class="qa.com.testSuites.RegisterAccountSuite"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-05-19T20:36:10 IST" name="Default test" finished-at="2024-05-19T20:37:23 IST" duration-ms="72813">
      <class name="qa.com.testSuites.RegisterAccountSuite">
        <test-method signature="TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields()[pri:1, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:10 IST" name="TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields" description="TC_RF_001_Validate Registering an Account by providing only the Mandatory fields" finished-at="2024-05-19T20:36:19 IST" duration-ms="8679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_001_ValidateRegisteringAnAccountByProvidingOnlyMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:19 IST" name="tearDown" finished-at="2024-05-19T20:36:20 IST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails()[pri:2, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:20 IST" name="TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails" description="TC_RF_002_Validate Registering an Account by providing all the fields" finished-at="2024-05-19T20:36:28 IST" duration-ms="8239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_002_ValidateRegisteringAnAccountByProvidingAllfieldsDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:28 IST" name="tearDown" finished-at="2024-05-19T20:36:28 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields()[pri:3, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:28 IST" name="TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields" description="TC_RF_003_Validate proper notification messages are displayed for the mandatory fields" finished-at="2024-05-19T20:36:34 IST" duration-ms="5182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_003_ValidateProperNotificationMessagesAreDisplayedForTheMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:34 IST" name="tearDown" finished-at="2024-05-19T20:36:34 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield()[pri:4, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:34 IST" name="TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield" description="TC_RF_004_Validate Registering an Account when &#039;Yes&#039; option is selected for Newsletter field" finished-at="2024-05-19T20:36:41 IST" duration-ms="6610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_004_ValidateRegisteringAnAccountWhenYesOptionIsSelectedForNewsletterfield -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:41 IST" name="tearDown" finished-at="2024-05-19T20:36:41 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield()[pri:5, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:41 IST" name="TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield" description="TC_RF_005_Validate Registering an Account when &#039;No&#039; option is selected for Newsletter field" finished-at="2024-05-19T20:36:48 IST" duration-ms="6597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_005_ValidateRegisteringAnAccountWhenNoOptionIsSelectedForNewsletterfield -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:48 IST" name="tearDown" finished-at="2024-05-19T20:36:48 IST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage()[pri:6, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:48 IST" name="TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage" description="TC_RF_006_Validate different ways of navigating to &#039;Register Account&#039; page" finished-at="2024-05-19T20:36:51 IST" duration-ms="2877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_006_ValidateDifferentWaysOfNavigatingToRegisterAccountPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:51 IST" name="tearDown" finished-at="2024-05-19T20:36:51 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_007()[pri:7, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:36:51 IST" name="TC_RF_007" description="TC_RF_007_Validate Registering an Account by providing the existing account details (i.e. existing email address)" finished-at="2024-05-19T20:37:02 IST" duration-ms="10801" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.getClass()" because "exceptionDriver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.getClass()" because "exceptionDriver" is null
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:85)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at qa.com.abstractcomponents.ReusableUtilities.waitForElementToBeVisible(ReusableUtilities.java:144)
at qa.com.abstractcomponents.ReusableUtilities.getText_custom(ReusableUtilities.java:89)
at qa.com.pageObjects.RegisterAccountPage.verifyText(RegisterAccountPage.java:154)
at qa.com.pageObjects.RegisterAccountPage.verifyEmailWarningMessage(RegisterAccountPage.java:184)
at qa.com.testSuites.RegisterAccountSuite.TC_RF_007(RegisterAccountSuite.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_007 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:02 IST" name="tearDown" finished-at="2024-05-19T20:37:02 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield()[pri:8, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:02 IST" name="TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield" description="TC_RF_008_Validate Registering an Account by providing an invalid email address into the E-Mail field" finished-at="2024-05-19T20:37:08 IST" duration-ms="6017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_008_ValidateRegisteringAnAccountByProvidingAnInvalidEmailAddresIntoTheEMailfield -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:09 IST" name="tearDown" finished-at="2024-05-19T20:37:09 IST" duration-ms="277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys()[pri:9, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:09 IST" name="TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys" description="TC_RF_009_Validate Registering an Account by using the Keyboard keys" finished-at="2024-05-19T20:37:13 IST" duration-ms="4054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_009_ValidateRegisteringAnAccountByUsingKeyboardKeys -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:13 IST" name="tearDown" finished-at="2024-05-19T20:37:13 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_010_ValidateRegisterAccountFieldsPlacehoders()[pri:10, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:13 IST" name="TC_RF_010_ValidateRegisterAccountFieldsPlacehoders" description="TC_RF_010_Validate all the fields in the Register Account page have the proper placeholders" finished-at="2024-05-19T20:37:16 IST" duration-ms="2635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_010_ValidateRegisterAccountFieldsPlacehoders -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:16 IST" name="tearDown" finished-at="2024-05-19T20:37:16 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly()[pri:11, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:16 IST" name="TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly" description="TC_RF_011_Validate whether the Mandatory fields in the Register Account page are accepting only spaces" finished-at="2024-05-19T20:37:23 IST" duration-ms="6450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_RF_011_ValidateMandatoryFieldAcceptiongSpacesOnly -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:qa.com.testSuites.RegisterAccountSuite@1d483de4]" started-at="2024-05-19T20:37:23 IST" name="tearDown" finished-at="2024-05-19T20:37:23 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- qa.com.testSuites.RegisterAccountSuite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
